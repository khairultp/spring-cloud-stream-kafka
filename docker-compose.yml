services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-net

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - kafka-net

  kafka-producer:
    image: kafka-producer
    build:
      context: .
      dockerfile: ./kafka-producer/Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:29092
    networks:
      - kafka-net

  kafka-consumer:
    image: kafka-consumer
    build:
      context: .
      dockerfile: ./kafka-consumer/Dockerfile
    ports:
      - "8082:8082"
    environment:
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:29092
      SPRING.DATA.REDIS.HOST: redis
      SPRING.DATA.REDIS.PORT: 6379
    networks:
      - kafka-net

  dashboard:
    image: dashboard
    build:
      context: .
      dockerfile: ./dashboard/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8082
    depends_on:
      - kafka-consumer
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge
